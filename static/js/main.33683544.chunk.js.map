{"version":3,"sources":["utils/helpers.js","componetns/head.js","componetns/notFound.js","componetns/boards/createBoard/createBoard.js","actions/createNewBoard.js","actions/actionTypes.js","componetns/boards/createBoard/createBoarForm.js","componetns/boards/createBoard/createBoardContainer.js","componetns/boards/boardCard.js","componetns/boards.js","reducers/createBoardReducer.js","reducers/boardsReducer.js","reducers/boardReducer.js","reducers/boardDataReducer.js","reducers/rootReducer.js","store.js","utils/syncLocalStore.js","componetns/boards/board/createList/createList.js","actions/createNewList.js","componetns/boards/board/createList/createListForm.js","componetns/boards/board/createList/createListContainer.js","componetns/boards/board/createItem/createItemForm.js","actions/createNewItem.js","componetns/boards/board/biTrash.js","componetns/boards/board/item.js","actions/item.js","componetns/boards/board/list.js","actions/lists.js","componetns/boards/board/boardImg/addBoardImg/addBoardImgBtn.js","componetns/boards/board/boardImg/addBoardImg/addBoardImgForm.js","componetns/boards/board/boardImg/addBoardImg/addBoardImgContainer.js","componetns/boards/board/boardImg/deleteBoardImg.js","componetns/boards/board/board.js","actions/board.js","componetns/app.js","serviceWorker.js","index.js"],"names":["module","exports","reorder","obj","sourceIndex","destinationIndex","keys","Object","reduce","ret","key","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Head","className","to","NotFound","CreateBoard","onClick","props","createNewBoard","Component","connect","type","CreateBoardForm","updateInput","boardName","setState","onKeyUp","event","keyCode","handleAdd","state","length","submitCreateNewBoard","cancelCreateNewBoard","htmlFor","id","placeholder","value","this","onChange","e","target","payload","uuidv4","name","data","CreateBoardContainer","Fragment","newBoard","isCreateBoardOpen","BoardCard","board","style","backgroundImage","img","Boards","document","body","classList","remove","boards","map","initialState","isCreateListOpen","rootReducer","combineReducers","action","boardId","boardImg","filter","push","list","listId","find","items","boardData","lists","forEach","newState","assign","newStateReorderLists","listNewItem","item","listEditItem","itemId","isDone","listDeleteItem","listToReorder","initialBoardsState","boardState","localStorage","getItem","JSON","parse","err","loadData","store","createStore","composeWithDevTools","subscribe","throttle","storeState","setItem","stringify","Error","syncDataChange","getState","CreateList","createNewList","CreateListForm","listName","submitCreateNewList","cancelCreateNewList","CreateListContainer","CreateItemForm","itemName","submitCreateNewItem","BiTrash","width","height","fill","d","fillRule","Item","handleIsDoneChange","toggleDoneItem","handleDelete","deleteItem","checked","join","defaultValue","List","handleDeleteList","deleteList","itemKeys","onDragEnd","droppableId","provided","snapshot","ref","innerRef","droppableProps","itemKey","index","draggableId","draggableProps","dragHandleProps","getItemStyle","isDragging","AddBoardImgBtn","handleOpenFormAddBoardImg","AddBoardImgForm","onChangeImgUrl","imgUrl","handleAddImgByUrl","handleUploadImg","AddBoardImgContainer","isAddImgOpen","DeleteBoardImg","isImg","handleDeleteImg","Board","destination","sInd","source","dInd","test","reorderLists","reorderItems","draggableStyle","handleDeleteBoard","deleteBoard","history","uploadImg","a","files","encoded","saveImg","addImgByUrl","saveBoardImg","setImageToBody","deleteImg","deleteBoardImg","openFormAddBoardImg","setTimeout","add","getBoard","match","params","listKeys","direction","listKey","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","Store","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.33683544.chunk.js","sourcesContent":["const reorder = (obj, sourceIndex, destinationIndex) => {\r\n\tlet keys = Object.keys(obj);\r\n\t[keys[sourceIndex], keys[destinationIndex]] = [keys[destinationIndex], keys[sourceIndex]];\r\n\treturn keys.reduce((ret, key) => {\r\n\t\tret[key] = obj[key];\r\n\t\treturn ret;\r\n\t}, {});\r\n};\r\n\r\nconst getBase64 = (file) => new Promise(function (resolve, reject) {\r\n\tlet reader = new FileReader();\r\n\treader.readAsDataURL(file);\r\n\treader.onload = () => resolve(reader.result);\r\n\treader.onerror = (error) => reject('Error: ', error);\r\n});\r\n\r\nmodule.exports = {reorder, getBase64};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Head = () => (\r\n\t<nav className=\"navbar navbar-light bg-light\">\r\n\t\t<Link className=\"navbar-brand\" to='/'>Clone trello</Link>\r\n\t</nav>\r\n);\r\n\r\nexport default Head;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NotFound = () => (\r\n\t<div className='notFound'>\r\n\t\t<Link to=\"/\">Go to boards list</Link>\r\n\t</div>\r\n);\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createNewBoard} from '../../../actions/createNewBoard';\r\n\r\nclass CreateBoard extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='col mb-4'>\r\n\t\t\t\t<div className=\"card cp\" onClick={() => this.props.createNewBoard()}>\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\tCreate a new board\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(null, {createNewBoard})(CreateBoard);","import {v4 as uuidv4} from 'uuid';\r\nimport {CREATE_NEW_BOARD, CANCEL_CREATE_NED_BOARD, STORE_NEW_BOARD} from \"./actionTypes\";\r\n\r\nexport const createNewBoard = () => {\r\n\treturn {\r\n\t\ttype: CREATE_NEW_BOARD, // mandatory key\r\n\t};\r\n};\r\n\r\nexport const cancelCreateNewBoard = () => {\r\n\treturn {\r\n\t\ttype: CANCEL_CREATE_NED_BOARD,\r\n\t};\r\n};\r\n\r\nexport const submitCreateNewBoard = (boardName) => {\r\n\treturn {\r\n\t\ttype: STORE_NEW_BOARD,\r\n\t\tpayload: {\r\n\t\t\tid: `board_${uuidv4()}`,\r\n\t\t\tname: boardName,\r\n\t\t\tdata: [],\r\n\t\t}\r\n\t}\r\n};","export const CREATE_NEW_BOARD = 'CREATE_NEW_BOARD';\r\nexport const CANCEL_CREATE_NED_BOARD = 'CANCEL_CREATE_NED_BOARD';\r\n\r\nexport const STORE_NEW_BOARD = 'STORE_NEW_BOARD';\r\nexport const GET_BOARD = 'GET_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const SAVE_BOARD_IMG = 'SAVE_BOARD_IMG';\r\nexport const DELETE_BOARD_IMG = 'DELETE_BOARD_IMG';\r\n\r\n\r\nexport const GET_LISTS = 'GET_LISTS';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const CREATE_NEW_LIST = 'CREATE_NEW_LIST';\r\nexport const CANCEL_CREATE_NEW_LIST = 'CANCEL_CREATE_NEW_LIST';\r\nexport const STORE_NEW_LIST = 'STORE_NEW_LIST';\r\nexport const REORDER_LISTS = 'REORDER_LISTS';\r\n\r\nexport const STORE_NEW_ITEM = 'STORE_NEW_ITEM';\r\nexport const TOGGLE_DONE_ITEM = 'TOGGLE_DONE_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const REORDER_ITEMS = 'REORDER_ITEMS';","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {cancelCreateNewBoard, submitCreateNewBoard} from \"../../../actions/createNewBoard\";\r\n\r\nclass CreateBoardForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {boardName: \"\" };\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='col mb-4'>\r\n\t\t\t\t<div className=\"card cp\">\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"boardName\">Board name</label>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" id=\"boardName\" placeholder='Board name'\r\n\t\t\t\t\t\t\t\t   value={this.state.boardName} onChange={e => this.updateInput(e.target.value)} onKeyUp={this.onKeyUp}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='btn-group'>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-primary\" onClick={this.handleAdd}>Create</button>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-outline-secondary\" onClick={() => this.props.cancelCreateNewBoard()}>Cancel</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tupdateInput = boardName => {\r\n\t\tthis.setState({boardName});\r\n\t};\r\n\r\n\tonKeyUp = event => {\r\n\t\t//enter\r\n\t\tif (event.keyCode === 13) {\r\n\t\t\tthis.handleAdd();\r\n\t\t}\r\n\t};\r\n\r\n\thandleAdd = () => {\r\n\t\tif(!this.state.boardName.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.submitCreateNewBoard(this.state.boardName);\r\n\t\tthis.setState({boardName: \"\"});\r\n\t\tthis.props.cancelCreateNewBoard();\r\n\t};\r\n}\r\n\r\nexport default connect(null, {cancelCreateNewBoard, submitCreateNewBoard})(CreateBoardForm);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CreateBoard from \"./createBoard\";\r\nimport CreateBoardForm from './createBoarForm';\r\n\r\nclass CreateBoardContainer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{this.props.newBoard.isCreateBoardOpen ? <CreateBoardForm/> : <CreateBoard/>}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps({newBoard}) {\r\n\treturn {newBoard}\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateBoardContainer);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst BoardCard = ({board}) => {\r\n\treturn (\r\n\t\t<div className='col mb-4'>\r\n\t\t\t<div className=\"card boardCard bg-light\" style={{backgroundImage: `url(${board.img})`}}>\r\n\t\t\t\t<Link to={`/board/${board.id}`}>\r\n\t\t\t\t\t<div className=\"card-body text-light font-weight-bolder text-shadow\">\r\n\t\t\t\t\t\t{board.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoardCard;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport CreateBoardContainer from './boards/createBoard/createBoardContainer'\r\nimport BoardCard from \"./boards/boardCard\";\r\n\r\nclass Boards extends Component {\r\n\tcomponentDidMount() {\r\n\t\tdocument.body.style.backgroundImage = null;\r\n\t\tdocument.body.classList.remove('boardBg');\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='row row-cols-1 row-cols-md-6'>\r\n\t\t\t\t<CreateBoardContainer/>\r\n\t\t\t\t{this.props.boards.map(board => {\r\n\t\t\t\t\treturn <BoardCard key={board.id} board={board}/>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps({boards}) {\r\n\treturn {boards}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Boards);","import {CREATE_NEW_BOARD, CANCEL_CREATE_NED_BOARD} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n\tisCreateBoardOpen: false,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase CREATE_NEW_BOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisCreateBoardOpen: true,\r\n\t\t\t};\r\n\r\n\t\tcase CANCEL_CREATE_NED_BOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisCreateBoardOpen: false,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import {\r\n\tDELETE_BOARD,\r\n\tDELETE_BOARD_IMG,\r\n\tDELETE_LIST, REORDER_ITEMS,\r\n\tREORDER_LISTS,\r\n\tSAVE_BOARD_IMG,\r\n\tSTORE_NEW_BOARD,\r\n\tSTORE_NEW_LIST\r\n} from '../actions/actionTypes';\r\nimport {reorder} from \"../utils/helpers\";\r\n/**\r\n *\r\n * @type {{data: [{name: string, id: string, items: {id: {id: string, name: string}}}], name: string, id: string}[]}\r\n */\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase STORE_NEW_BOARD:\r\n\t\t\treturn [...state, action.payload];\r\n\t\tcase SAVE_BOARD_IMG:\r\n\t\t\treturn state.map(board => {\r\n\t\t\t\tif (board.id !== action.payload.boardId) {\r\n\t\t\t\t\treturn board;\r\n\t\t\t\t}\r\n\t\t\t\treturn {...board, img: action.payload.boardImg};\r\n\t\t\t});\r\n\t\tcase DELETE_BOARD_IMG:\r\n\t\t\treturn state.map(board => {\r\n\t\t\t\tif (board.id !== action.payload.boardId) {\r\n\t\t\t\t\treturn board;\r\n\t\t\t\t}\r\n\t\t\t\treturn {...board, img: ''};\r\n\t\t\t});\r\n\t\tcase DELETE_BOARD:\r\n\t\t\treturn state.filter(board => board.id !== action.payload.boardId);\r\n\t\tcase STORE_NEW_LIST:\r\n\t\t\treturn state.map(board => {\r\n\t\t\t\tif(board.id !== action.payload.boardId) {\r\n\t\t\t\t\treturn board;\r\n\t\t\t\t}\r\n\t\t\t\tif (!board.data) {\r\n\t\t\t\t\tboard.data = [];\r\n\t\t\t\t}\r\n\t\t\t\tboard.data.push(action.payload.list);\r\n\t\t\t\treturn board;\r\n\t\t\t});\r\n\t\tcase DELETE_LIST:\r\n\t\t\treturn state.map(board => {\r\n\t\t\t\tif (board.id !== action.payload.boardId) {\r\n\t\t\t\t\treturn board;\r\n\t\t\t\t}\r\n\t\t\t\tboard.data = board.data.filter(list => list.id !== action.payload.listId);\r\n\t\t\t\treturn board;\r\n\t\t\t});\r\n\t\tcase REORDER_LISTS:\r\n\t\t\treturn state.map(board => {\r\n\t\t\t\tif (board.id !== action.payload.boardId) {\r\n\t\t\t\t\treturn board;\r\n\t\t\t\t}\r\n\t\t\t\tconst {sourceIndex, destinationIndex} = action.payload;\r\n\t\t\t\t[board.data[sourceIndex], board.data[destinationIndex]] = [board.data[destinationIndex], board.data[sourceIndex]];\r\n\t\t\t\treturn board;\r\n\t\t\t});\r\n\t\tcase REORDER_ITEMS:\r\n\t\t\treturn state.map(board => {\r\n\t\t\t\tif (board.id !== action.payload.boardId) {\r\n\t\t\t\t\treturn board;\r\n\t\t\t\t}\r\n\t\t\t\tconst {listId, sourceIndex, destinationIndex} = action.payload;\r\n\t\t\t\tlet list = board.data.find(list => list.id === listId);\r\n\t\t\t\tlet items = reorder(\r\n\t\t\t\t\tlist.items,\r\n\t\t\t\t\tsourceIndex,\r\n\t\t\t\t\tdestinationIndex\r\n\t\t\t\t);\r\n\t\t\t\tlist.items = {};\r\n\t\t\t\tlist.items = items;\r\n\t\t\t\treturn board;\r\n\t\t\t});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import {CANCEL_CREATE_NEW_LIST, CREATE_NEW_LIST, GET_BOARD} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n\tid: '',\r\n\tname: null,\r\n\tisCreateListOpen: false,\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_BOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tid:  action.payload.id,\r\n\t\t\t\tname: action.payload.name,\r\n\t\t\t\timg: action.payload.img,\r\n\t\t\t};\r\n\r\n\t\tcase CREATE_NEW_LIST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisCreateListOpen: true,\r\n\t\t\t};\r\n\r\n\t\tcase CANCEL_CREATE_NEW_LIST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisCreateListOpen: false,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import {\r\n\tGET_BOARD,\r\n\tSTORE_NEW_LIST,\r\n\tSTORE_NEW_ITEM,\r\n\tTOGGLE_DONE_ITEM,\r\n\tDELETE_ITEM,\r\n\tDELETE_LIST, REORDER_LISTS, REORDER_ITEMS,\r\n} from '../actions/actionTypes';\r\nimport {reorder} from \"../utils/helpers\";\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_BOARD:\r\n\t\t\tlet lists = {};\r\n\t\t\taction.payload.data.forEach(list => {\r\n\t\t\t\tlists[list.id] = list;\r\n\t\t\t});\r\n\t\t\treturn {...{}, ...lists};\r\n\t\tcase STORE_NEW_LIST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.payload.list.id]: action.payload.list\r\n\t\t\t};\r\n\t\tcase DELETE_LIST:\r\n\t\t\tlet newState = Object.assign({}, state);\r\n\t\t\tdelete newState[action.payload.listId];\r\n\t\t\treturn newState;\r\n\t\tcase REORDER_LISTS:\r\n\t\t\tconst {sourceIndex, destinationIndex} = action.payload;\r\n\t\t\tlet newStateReorderLists = Object.assign({}, state);\r\n\t\t\tnewStateReorderLists = reorder(\r\n\t\t\t\tnewStateReorderLists,\r\n\t\t\t\tsourceIndex,\r\n\t\t\t\tdestinationIndex\r\n\t\t\t);\r\n\t\t\treturn newStateReorderLists;\r\n\t\tcase STORE_NEW_ITEM:\r\n\t\t\tlet listNewItem = Object.assign({}, state[action.payload.listId]);\r\n\t\t\tlistNewItem.items[action.payload.item.id] = action.payload.item;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.payload.listId]: listNewItem\r\n\t\t\t};\r\n\t\tcase TOGGLE_DONE_ITEM:\r\n\t\t\tlet listEditItem = state[action.payload.listId];\r\n\t\t\tlet item = listEditItem.items[action.payload.itemId];\r\n\t\t\titem.isDone = !item.isDone;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.payload.listId]: listEditItem\r\n\t\t\t};\r\n\t\tcase DELETE_ITEM:\r\n\t\t\tlet listDeleteItem = Object.assign({}, state[action.payload.listId]);\r\n\t\t\tdelete listDeleteItem.items[action.payload.itemId];\r\n\t\t\treturn {...state, [action.payload.listId]: listDeleteItem};\r\n\t\tcase REORDER_ITEMS:\r\n\t\t\tlet listToReorder = Object.assign({}, state[action.payload.listId]);\r\n\t\t\tlistToReorder.items = reorder(\r\n\t\t\t\tlistToReorder.items,\r\n\t\t\t\taction.payload.sourceIndex,\r\n\t\t\t\taction.payload.destinationIndex\r\n\t\t\t);\r\n\t\t\treturn {...state, [action.payload.listId]: listToReorder};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","import {combineReducers} from 'redux';\r\n\r\nimport createBoardReducer from './createBoardReducer';\r\nimport boardsReducer from './boardsReducer';\r\nimport boardReducer from './boardReducer';\r\nimport boardDataReducer from './boardDataReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tboards: boardsReducer,\r\n\tnewBoard: createBoardReducer,\r\n\tboard: boardReducer,\r\n\tboardData: boardDataReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\n","import {createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport throttle from 'lodash/throttle';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\nimport {loadData, syncDataChange} from './utils/syncLocalStore';\r\n\r\nconst initialBoardsState = loadData();\r\nconst store = createStore(\r\n\trootReducer,\r\n\t{boards: initialBoardsState}, // sets initial state\r\n\tcomposeWithDevTools() // makes debugging through Redux Dev Tools possible\r\n);\r\n\r\nstore.subscribe(throttle(() => {\r\n\tsyncDataChange(store.getState().boards);\r\n}, 500));\r\n\r\nexport default store;","const localStorageBoardsKey = 'boards';\r\n\r\nexport const syncDataChange = (storeState) => {\r\n\ttry {\r\n\t\tlocalStorage.setItem(localStorageBoardsKey, JSON.stringify(storeState));\r\n\t} catch (err) {\r\n\t\tnew Error(err);\r\n\t}\r\n};\r\n\r\nexport const loadData = () => {\r\n\ttry {\r\n\t\tconst boardState = localStorage.getItem(localStorageBoardsKey);\r\n\t\tif (boardState === null) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn JSON.parse(boardState)\r\n\t} catch (err) {\r\n\t\treturn [];\r\n\t}\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createNewList} from '../../../../actions/createNewList';\r\n\r\nclass CreateList extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"card cp addList\" onClick={() => this.props.createNewList()}>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\tAdd a list\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(null, {createNewList})(CreateList);","import {v4 as uuidv4} from 'uuid';\r\nimport {CREATE_NEW_LIST, CANCEL_CREATE_NEW_LIST, STORE_NEW_LIST} from './actionTypes';\r\n\r\nexport const createNewList = () => {\r\n\treturn {\r\n\t\ttype: CREATE_NEW_LIST,\r\n\t};\r\n};\r\n\r\nexport const cancelCreateNewList = () => {\r\n\treturn {\r\n\t\ttype: CANCEL_CREATE_NEW_LIST,\r\n\t};\r\n};\r\n\r\nexport const submitCreateNewList = (boardId, listName) => {\r\n\treturn {\r\n\t\ttype: STORE_NEW_LIST,\r\n\t\tpayload: {\r\n\t\t\tboardId,\r\n\t\t\tlist: {\r\n\t\t\t\tid: `list_${uuidv4()}`,\r\n\t\t\t\tname: listName,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {cancelCreateNewList, submitCreateNewList} from '../../../../actions/createNewList';\r\n\r\nclass CreateListForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {listName: \"\" };\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"card cp addList\">\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" id=\"listName\" placeholder='List name'\r\n\t\t\t\t\t\t\t   value={this.state.listName} onChange={e => this.updateInput(e.target.value)} onKeyUp={this.onKeyUp}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='btn-group'>\r\n\t\t\t\t\t\t<button className=\"btn btn-outline-primary\" onClick={this.handleAdd}>Create</button>\r\n\t\t\t\t\t\t<button className=\"btn btn-outline-secondary\" onClick={() => this.props.cancelCreateNewList()}>Cancel</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tupdateInput = listName => {\r\n\t\tthis.setState({listName});\r\n\t};\r\n\r\n\tonKeyUp = event => {\r\n\t\t//enter\r\n\t\tif (event.keyCode === 13) {\r\n\t\t\tthis.handleAdd();\r\n\t\t}\r\n\t};\r\n\r\n\thandleAdd = () => {\r\n\t\tif(!this.state.listName.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.props.submitCreateNewList(this.props.boardId, this.state.listName);\r\n\t\tthis.setState({listName: \"\"});\r\n\t\tthis.props.cancelCreateNewList();\r\n\t};\r\n}\r\n\r\nexport default connect(null, {cancelCreateNewList, submitCreateNewList})(CreateListForm);","import React from 'react';\r\nimport CreateList from './createList';\r\nimport CreateListForm from \"./createListForm\";\r\n\r\nconst CreateListContainer = ({board}) => (\r\n\t<React.Fragment>\r\n\t\t{board.isCreateListOpen ? <CreateListForm boardId={board.id}/> : <CreateList/>}\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default CreateListContainer;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {submitCreateNewItem} from '../../../../actions/createNewItem';\r\n\r\nclass CreateItemForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {itemName: \"\"};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder='item todo'\r\n\t\t\t\t\t   value={this.state.itemName} onChange={e => this.updateInput(e.target.value)} onKeyUp={this.onKeyUp}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tupdateInput = itemName => {\r\n\t\tthis.setState({itemName});\r\n\t};\r\n\r\n\tonKeyUp = event => {\r\n\t\tif(!this.state.itemName.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//enter\r\n\t\tif (event.keyCode === 13) {\r\n\t\t\tthis.props.submitCreateNewItem(this.props.boardId, this.props.listId, this.state.itemName);\r\n\t\t\tthis.setState({itemName: ''});\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default connect(null, {submitCreateNewItem})(CreateItemForm);","import {v4 as uuidv4} from 'uuid';\r\nimport {STORE_NEW_ITEM} from './actionTypes';\r\n\r\nexport const submitCreateNewItem = (boardId, listId, itemName) => {\r\n\treturn {\r\n\t\ttype: STORE_NEW_ITEM,\r\n\t\tpayload: {\r\n\t\t\tboardId,\r\n\t\t\tlistId,\r\n\t\t\titem: {\r\n\t\t\t\tid: `item_${uuidv4()}`,\r\n\t\t\t\tname: itemName,\r\n\t\t\t\tisDone: false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};","import React from 'react';\r\nconst BiTrash = () => (\r\n\t<svg width=\"16\" height=\"16\" className=\"bi bi-trash\" fill=\"currentColor\">\r\n\t\t<path\r\n\t\t\td=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n\t\t<path fillRule=\"evenodd\"\r\n\t\t\t  d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n\t</svg>\r\n);\r\n\r\nexport default BiTrash;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {toggleDoneItem, deleteItem} from '../../../actions/item';\r\nimport BiTrash from \"./biTrash\";\r\n\r\nclass Item extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = this.props.item;\r\n\t}\r\n\trender() {\r\n\t\tlet className = ['form-control'];\r\n\t\tif (this.state.isDone) {\r\n\t\t\tclassName.push('itemIsDone');\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"input-group mb-4\">\r\n\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t<div className=\"input-group-text\">\r\n\t\t\t\t\t\t<input type=\"checkbox\" checked={this.state.isDone} onChange={this.handleIsDoneChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"text\" className={className.join(' ')} defaultValue={this.state.name}/>\r\n\t\t\t\t<div className=\"input-group-append\">\r\n\t\t\t\t\t<button className=\"btn btn-outline-secondary\" type=\"button\" onClick={this.handleDelete}>\r\n\t\t\t\t\t\t<BiTrash/>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\thandleIsDoneChange = () => {\r\n\t\tthis.setState({isDone: !this.state.isDone});\r\n\t\tthis.props.toggleDoneItem(this.props.listId, this.props.item.id);\r\n\t};\r\n\r\n\thandleDelete = () => {\r\n\t\tthis.props.deleteItem(this.props.listId, this.props.item.id);\r\n\t}\r\n}\r\n\r\nexport default connect(null, {toggleDoneItem, deleteItem})(Item);","import {TOGGLE_DONE_ITEM, DELETE_ITEM, REORDER_ITEMS} from \"./actionTypes\";\r\n\r\nexport const toggleDoneItem = (listId, itemId) => {\r\n\treturn {\r\n\t\ttype: TOGGLE_DONE_ITEM,\r\n\t\tpayload: {listId, itemId}\r\n\t}\r\n};\r\n\r\nexport const deleteItem = (listId, itemId) => {\r\n\treturn {\r\n\t\ttype: DELETE_ITEM,\r\n\t\tpayload: {listId, itemId}\r\n\t}\r\n};\r\n\r\nexport const reorderItems = (boardId, listId, sourceIndex, destinationIndex) => {\r\n\treturn {\r\n\t\ttype: REORDER_ITEMS,\r\n\t\tpayload: {boardId, listId, sourceIndex, destinationIndex}\r\n\t}\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\r\nimport CreateItemForm from './createItem/createItemForm';\r\nimport Item from \"./item\";\r\nimport BiTrash from \"./biTrash\";\r\nimport {deleteList} from '../../../actions/lists';\r\n\r\nclass List extends Component {\r\n\trender() {\r\n\t\tconst {boardId, list} = this.props;\r\n\t\tconst itemKeys = Object.keys(list.items || {});\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-header\">{list.name}\r\n\t\t\t\t\t<span className='float-md-right align-text-bottom cp' onClick={this.handleDeleteList}><BiTrash/></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<DragDropContext onDragEnd={this.props.onDragEnd}>\r\n\t\t\t\t\t\t<Droppable key={list.id} droppableId={`${list.id}`}>\r\n\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{itemKeys.map((itemKey, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Draggable\r\n\t\t\t\t\t\t\t\t\t\t\tkey={itemKey}\r\n\t\t\t\t\t\t\t\t\t\t\tdraggableId={itemKey}\r\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={this.props.getItemStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsnapshot.isDragging,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprovided.draggableProps.style\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Item key={itemKey} listId={list.id} item={list.items[itemKey]}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t</DragDropContext>\r\n\r\n\t\t\t\t\t<CreateItemForm listId={list.id} boardId={boardId}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\thandleDeleteList = () => {\r\n\t\tthis.props.deleteList(this.props.boardId, this.props.list.id);\r\n\t}\r\n}\r\n\r\nexport default connect(null, {deleteList})(List);","import store from './../store';\r\nimport {GET_LISTS, DELETE_LIST, REORDER_LISTS} from \"./actionTypes\";\r\n\r\nexport const getLists = (boardId) => {\r\n\tconst listsData = store.getState().listsData;\r\n\tconst lists = listsData[boardId] || [];\r\n\treturn {\r\n\t\ttype: GET_LISTS,\r\n\t\tpayload: lists\r\n\t};\r\n};\r\n\r\nexport const deleteList = (boardId, listId) => {\r\n\treturn {\r\n\t\ttype: DELETE_LIST,\r\n\t\tpayload: {boardId, listId}\r\n\t}\r\n};\r\n\r\nexport const reorderLists = (boardId, sourceIndex, destinationIndex) => {\r\n\treturn {\r\n\t\ttype: REORDER_LISTS,\r\n\t\tpayload: {boardId, sourceIndex, destinationIndex}\r\n\t}\r\n};","import React, {Component} from 'react';\r\n\r\nclass AddBoardImgBtn extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"border border-secondary p-2 rounded cp\" onClick={this.props.handleOpenFormAddBoardImg}>Add background</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AddBoardImgBtn;","import React, {Component} from 'react';\r\n\r\nclass AddBoardImgForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\timgUrl: ''\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"form-row\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<label htmlFor=\"fileBoardImg\" className=\"col-sm-10 col-form-label border border-secondary rounded cp\">Upload image</label>\r\n\t\t\t\t\t<div className=\"col-sm-8\">\r\n\t\t\t\t\t\t<input type=\"file\" className=\"form-control-file d-none\" id=\"fileBoardImg\" onChange={this.props.handleUploadImg}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mr-4 pt-1\">or</div>\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<input type=\"url\" className=\"form-control\" placeholder=\"Img url\" value={this.state.imgUrl} onChange={this.onChangeImgUrl} onKeyUp={this.onKeyUp}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tonChangeImgUrl = (event) => {\r\n\t\tthis.setState({imgUrl: event.target.value});\r\n\t};\r\n\r\n\tonKeyUp = (event) => {\r\n\t\tif(!this.state.imgUrl.length) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.keyCode === 13) {\r\n\t\t\tthis.props.handleAddImgByUrl(this.state.imgUrl);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default AddBoardImgForm;","import React from 'react';\r\nimport AddBoardImgBtn from './addBoardImgBtn';\r\nimport AddBoardImgForm from './addBoardImgForm';\r\n\r\nconst AddBoardImgContainer = ({isAddImgOpen, handleOpenFormAddBoardImg, handleUploadImg, handleAddImgByUrl}) => (\r\n\t<React.Fragment>\r\n\t\t{isAddImgOpen ?\r\n\t\t\t<AddBoardImgForm handleUploadImg={handleUploadImg} handleAddImgByUrl={handleAddImgByUrl}/>\r\n\t\t\t: <AddBoardImgBtn handleOpenFormAddBoardImg={handleOpenFormAddBoardImg}/>}\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default AddBoardImgContainer;","import React from 'react';\r\n\r\nconst DeleteBoardImg = ({isImg, handleDeleteImg}) => (\r\n\t<React.Fragment>\r\n\t\t{isImg ? <div className=\"border border-secondary p-2 rounded cp ml-2\" onClick={handleDeleteImg}>Delete background</div> : ''}\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default DeleteBoardImg;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd';\r\n\r\nimport {getBoard, deleteBoard, saveBoardImg, deleteBoardImg} from '../../../actions/board';\r\nimport {reorderLists} from '../../../actions/lists';\r\nimport {reorderItems} from '../../../actions/item';\r\nimport {getBase64} from '../../../utils/helpers';\r\n\r\nimport CreateListContainer from './createList/createListContainer';\r\nimport List from \"./list\";\r\nimport BiTrash from \"./biTrash\";\r\nimport AddBoardImgContainer from './boardImg/addBoardImg/addBoardImgContainer';\r\nimport DeleteBoardImg from \"./boardImg/deleteBoardImg\";\r\n\r\nclass Board extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\timg: this.props.board.img || '',\r\n\t\t\tisAddImgOpen: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getBoard(this.props.match.params.id);\r\n\t\tthis.setImageToBody();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {board, boardData} = this.props;\r\n\t\tif(!board || !board.id) {\r\n\t\t\treturn <Redirect to='/'/>\r\n\t\t}\r\n\r\n\t\tconst listKeys = Object.keys(boardData);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<nav className=\"navbar navbar-light bg-light\">\r\n\t\t\t\t\t<span className=\"navbar-brand mr-auto\">{board.name}</span>\r\n\r\n\t\t\t\t\t<AddBoardImgContainer\r\n\t\t\t\t\t\tisAddImgOpen={this.state.isAddImgOpen}\r\n\t\t\t\t\t\thandleOpenFormAddBoardImg={this.openFormAddBoardImg}\r\n\t\t\t\t\t\thandleUploadImg={this.uploadImg}\r\n\t\t\t\t\t\thandleAddImgByUrl={this.addImgByUrl}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<DeleteBoardImg isImg={!!this.state.img} handleDeleteImg={this.deleteImg}/>\r\n\r\n\t\t\t\t\t<span className='float-md-right align-text-bottom cp ml-2' onClick={this.handleDeleteBoard}><BiTrash/></span>\r\n\t\t\t\t</nav>\r\n\r\n\t\t\t\t<div className='boardListsContainer card-group mt-4'>\r\n\t\t\t\t\t<DragDropContext onDragEnd={this.onDragEnd}>\r\n\t\t\t\t\t\t<Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\tclassName='boardListsGroup'\r\n\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{listKeys.map((listKey, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Draggable key={listKey} draggableId={listKey} index={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='boardList col mb-8'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={this.getItemStyle(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsnapshot.isDragging,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprovided.draggableProps.style\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<List key={listKey} list={boardData[listKey]} boardId={board.id} onDragEnd={this.onDragEnd} getItemStyle={this.getItemStyle}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t</DragDropContext>\r\n\t\t\t\t\t<CreateListContainer board={board}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tonDragEnd = (result) => {\r\n\t\t// dropped outside the list\r\n\t\tif (!result.destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst sInd = result.source.droppableId;\r\n\t\tconst dInd = result.destination.droppableId;\r\n\t\tconst isBoardLists = !/list/.test(sInd);\r\n\r\n\t\t// lists\r\n\t\tif (isBoardLists && sInd === dInd) {\r\n\t\t\tthis.props.reorderLists(this.props.board.id, result.source.index, result.destination.index);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// inside list\r\n\t\tif (sInd === dInd) {\r\n\t\t\tthis.props.reorderItems(this.props.board.id, sInd, result.source.index, result.destination.index);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//TODO add move item between lists\r\n\t};\r\n\r\n\tgetItemStyle = (isDragging, draggableStyle) => ({\r\n\t\t// styles we need to apply on draggables\r\n\t\t...draggableStyle,\r\n\t});\r\n\r\n\thandleDeleteBoard = () => {\r\n\t\tthis.props.deleteBoard(this.props.board.id);\r\n\t\tthis.props.history.push(\"/\");\r\n\t};\r\n\r\n\tuploadImg = async (event) => {\r\n\t\tlet encoded = await getBase64(event.target.files[0]);\r\n\t\tthis.setState({\r\n\t\t\timg: encoded,\r\n\t\t});\r\n\t\tthis.saveImg();\r\n\t};\r\n\r\n\taddImgByUrl = (imgUrl) => {\r\n\t\tthis.setState({\r\n\t\t\timg: imgUrl,\r\n\t\t});\r\n\t\tthis.saveImg();\r\n\t};\r\n\r\n\tsaveImg = () => {\r\n\t\tthis.props.saveBoardImg(this.props.board.id, this.state.img);\r\n\t\tthis.setState({isAddImgOpen: false});\r\n\t\tthis.setImageToBody();\r\n\t};\r\n\r\n\tdeleteImg = () => {\r\n\t\tthis.setState({\r\n\t\t\timg: '',\r\n\t\t});\r\n\t\tthis.props.deleteBoardImg(this.props.board.id);\r\n\t\tthis.setImageToBody();\r\n\t};\r\n\r\n\topenFormAddBoardImg = () => {\r\n\t\tthis.setState({\r\n\t\t\tisAddImgOpen: true\r\n\t\t});\r\n\t};\r\n\r\n\tsetImageToBody = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst bgClassName = 'boardBg';\r\n\t\t\tif (this.state.img) {\r\n\t\t\t\tdocument.body.classList.add(bgClassName);\r\n\t\t\t} else {\r\n\t\t\t\tdocument.body.classList.remove(bgClassName);\r\n\t\t\t}\r\n\r\n\t\t\tdocument.body.style.backgroundImage = `url(${this.state.img})`;\r\n\t\t}, 200);\r\n\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps({board, boardData}) {return {board, boardData}}\r\n\r\nexport default connect(mapStateToProps,{getBoard, deleteBoard, saveBoardImg, deleteBoardImg, reorderLists, reorderItems})(Board);","import {GET_BOARD, DELETE_BOARD, SAVE_BOARD_IMG, DELETE_BOARD_IMG} from '../actions/actionTypes';\r\nimport store from './../store';\r\n\r\nexport const getBoard = (id) => {\r\n\tconst boards = store.getState().boards;\r\n\tconst activeBoard = boards.find(board => board.id === id) || {};\r\n\r\n\treturn {\r\n\t\ttype: GET_BOARD,\r\n\t\tpayload: activeBoard\r\n\t};\r\n};\r\n\r\nexport const deleteBoard = (id) => {\r\n\treturn {\r\n\t\ttype: DELETE_BOARD,\r\n\t\tpayload: {\r\n\t\t\tboardId: id\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport const saveBoardImg = (boardId, boardImg) => {\r\n\treturn {\r\n\t\ttype: SAVE_BOARD_IMG,\r\n\t\tpayload: {boardId, boardImg}\r\n\t}\r\n};\r\n\r\nexport const deleteBoardImg = (boardId) => {\r\n\treturn {\r\n\t\ttype: DELETE_BOARD_IMG,\r\n\t\tpayload: {boardId}\r\n\t}\r\n};","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Head from \"./head\";\nimport NotFound from \"./notFound\";\nimport Boards from \"./boards\";\nimport Board from \"./boards/board/board\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Head/>\n\t\t\t\t<div className='container-fluid mt-4'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Boards}/>\n\t\t\t\t\t\t<Route exact path=\"/board/:id\" component={Board}/>\n\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport App from './componetns/app';\nimport Store from \"./store\";\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={Store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}